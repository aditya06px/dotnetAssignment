using System.Diagnostics;

namespace assignment2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello, World!");
            Employee o1 = new Employee();
            Employee o2 = new Employee();
            Employee o3 = new Employee();
            Console.WriteLine(o1.EmpNo);
            Console.WriteLine(o2.EmpNo);
            Console.WriteLine(o3.EmpNo);
            Console.WriteLine(o2.EmpNo);
            Console.WriteLine(o3.EmpNo);
        }
    }

    class Employee
    {
        private static int autoGeneratedId;
        private  int empNo;
        private String name;
        private short deptNo;
        private decimal basic;

        static Employee()
        {
            autoGeneratedId = 1;
        }
        public Employee() { this.empNo = autoGeneratedId++; }

        public Employee(String name)
        {
            this.empNo = autoGeneratedId++;
            this.name = name;
        }

        public Employee(String name,int empNo) 
        {
            this.empNo = autoGeneratedId++;
            this.name = name;
        }

        public Employee(String name, decimal basic , short deptNo)
        {
            this.empNo = autoGeneratedId++;
            this.name = name;
            this.basic = basic;
            this.deptNo = deptNo;
        }

        public String Name
        {
            get { return name; }
            set
            {
                if (value != "") name = value;
                else throw new Exception("name should not be blank");

            }
        }

        public int EmpNo
        {
            get { return empNo; }
            set
            {
                if (value > 0) empNo = value;
                else throw new Exception("emp no should be greater than 0");
            }
        }

        public decimal Basic
        {

            get { return basic; }
            set
            {
                if (value >= 5_000 && value <= 10_000) basic = value;
                else throw new Exception("must be in range 5,000 and 10,000");
            }
        }


        public short DeptNo
        {
            get { return deptNo; }
            set
            {
                if (value > 0) deptNo = value;
                else throw new Exception(" DeptNo must be greater than zero ");
            }
        }

        public decimal GetNetSalary()
        {
            return basic + 1_000;
        }
    }

    //    Create constructors to accept initial values for Employee obj
    //Employee o1 = new Employee("Amol", 123465, 10);
    //    Employee o2 = new Employee("Amol", 123465);
    //    Employee o3 = new Employee("Amol");
    //    Employee o4 = new Employee();

    //    EmpNo must be autogenerated...i.e.
    //    first object should automatically get EmpNo 1
    //second object should automatically get EmpNo 2
    //third object should automatically get EmpNo 3
    //...and so on...

    //    Test Cases
    //    Employee o1 = new Employee()
    //    Employee o2 = new Employee()
    //    Employee o3 = new Employee()
    //    cw(o1.EmpNo)
    //    cw(o2.EmpNo)
    //    cw(o3.EmpNo)

}